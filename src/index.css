@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* SFL Forge Industrial Color System */
    --background: 0 0% 100%;
    --foreground: 210 100% 7%;
    
    /* Deep Navy Primary - Industrial strength */
    --primary: 210 100% 12%;
    --primary-foreground: 0 0% 100%;
    --primary-glow: 210 100% 25%;
    
    /* Vibrant Orange Accent - Energy & Innovation */
    --accent: 16 100% 50%;
    --accent-foreground: 0 0% 100%;
    --accent-glow: 16 100% 60%;
    
    /* Steel Gray Secondary */
    --secondary: 0 0% 66%;
    --secondary-foreground: 210 100% 12%;
    
    --muted: 210 20% 95%;
    --muted-foreground: 210 10% 40%;
    
    --card: 0 0% 100%;
    --card-foreground: 210 100% 7%;
    
    --popover: 0 0% 100%;
    --popover-foreground: 210 100% 7%;
    
    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;
    
    --border: 210 20% 90%;
    --input: 210 20% 90%;
    --ring: 16 100% 50%;
    
    --radius: 0.5rem;
    
    /* Industrial Gradients */
    --gradient-hero: linear-gradient(135deg, hsl(210 100% 12%) 0%, hsl(210 100% 8%) 100%);
    --gradient-accent: linear-gradient(135deg, hsl(16 100% 50%) 0%, hsl(16 100% 45%) 100%);
    --gradient-card: linear-gradient(145deg, hsl(0 0% 100%) 0%, hsl(210 20% 98%) 100%);
    
    /* Shadows with orange glow */
    --shadow-primary: 0 10px 40px -10px hsl(210 100% 12% / 0.3);
    --shadow-accent: 0 10px 40px -10px hsl(16 100% 50% / 0.4);
    --shadow-card: 0 4px 20px -2px hsl(210 20% 20% / 0.1);
    
    /* Animations */
    --transition-smooth: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-spring: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .dark {
    --background: 210 100% 7%;
    --foreground: 0 0% 100%;
    
    --primary: 16 100% 50%;
    --primary-foreground: 210 100% 12%;
    --primary-glow: 16 100% 60%;
    
    --accent: 16 100% 55%;
    --accent-foreground: 210 100% 12%;
    --accent-glow: 16 100% 65%;
    
    --secondary: 210 20% 25%;
    --secondary-foreground: 0 0% 100%;
    
    --muted: 210 20% 15%;
    --muted-foreground: 210 10% 70%;
    
    --card: 210 50% 10%;
    --card-foreground: 0 0% 100%;
    
    --popover: 210 50% 10%;
    --popover-foreground: 0 0% 100%;
    
    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;
    
    --border: 210 20% 20%;
    --input: 210 20% 20%;
    --ring: 16 100% 50%;
    
    --gradient-hero: linear-gradient(135deg, hsl(210 100% 7%) 0%, hsl(210 100% 4%) 100%);
    --gradient-accent: linear-gradient(135deg, hsl(16 100% 50%) 0%, hsl(16 100% 45%) 100%);
    --gradient-card: linear-gradient(145deg, hsl(210 50% 10%) 0%, hsl(210 50% 8%) 100%);
    
    --shadow-primary: 0 10px 40px -10px hsl(16 100% 50% / 0.5);
    --shadow-accent: 0 10px 40px -10px hsl(16 100% 50% / 0.6);
    --shadow-card: 0 4px 20px -2px hsl(0 0% 0% / 0.3);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-feature-settings: "kern" 1, "liga" 1;
  }
  
  html {
    scroll-behavior: smooth;
  }
}

@layer utilities {
  /* Gradient backgrounds */
  .bg-gradient-hero {
    background: var(--gradient-hero);
  }
  
  .bg-gradient-accent {
    background: var(--gradient-accent);
  }
  
  .bg-gradient-card {
    background: var(--gradient-card);
  }
  
  /* Industrial shadows */
  .shadow-primary {
    box-shadow: var(--shadow-primary);
  }
  
  .shadow-accent {
    box-shadow: var(--shadow-accent);
  }
  
  .shadow-card {
    box-shadow: var(--shadow-card);
  }
  
  /* Smooth transitions */
  .transition-smooth {
    transition: var(--transition-smooth);
  }
  
  .transition-spring {
    transition: var(--transition-spring);
  }
  
  /* Hover lift effect */
  .hover-lift {
    @apply transition-spring;
  }
  
  .hover-lift:hover {
    transform: translateY(-8px) scale(1.02);
  }
  
  /* Parallax container */
  .parallax-container {
    overflow: hidden;
    position: relative;
  }
  
  /* Industrial grid pattern */
  .industrial-grid {
    background-image: 
      linear-gradient(hsl(var(--border)) 1px, transparent 1px),
      linear-gradient(90deg, hsl(var(--border)) 1px, transparent 1px);
    background-size: 50px 50px;
  }
  
  /* Text gradient */
  .text-gradient {
    @apply bg-clip-text text-transparent;
    background-image: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--accent)) 100%);
  }
  
  /* Loader spinner */
  @keyframes spin-slow {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  
  .animate-spin-slow {
    animation: spin-slow 2s linear infinite;
  }
  
  /* Pulse glow animation */
  @keyframes pulse-glow {
    0%, 100% {
      box-shadow: 0 0 20px hsl(var(--accent) / 0.4);
    }
    50% {
      box-shadow: 0 0 40px hsl(var(--accent) / 0.8);
    }
  }
  
  .animate-pulse-glow {
    animation: pulse-glow 2s ease-in-out infinite;
  }
  
  /* Slide up animation */
  @keyframes slide-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-slide-up {
    animation: slide-up 0.6s ease-out forwards;
  }
  
  /* 3D card effect */
  .card-3d {
    transform-style: preserve-3d;
    transition: transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
  
  .card-3d:hover {
    transform: rotateY(5deg) rotateX(5deg) translateZ(20px);
  }
}

/* Magnetic Particle Button */
.magnetic {
  @apply relative overflow-hidden px-6 py-3 font-semibold rounded text-white bg-primary transition-smooth;
}

.magnetic .particles-field {
  position: absolute;
  inset: 0;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s;
}

.magnetic:hover .particles-field {
  opacity: 1;
}

.magnetic .particle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: white;
  border-radius: 50%;
}

@keyframes particleFloat {
  0% { transform: translate(var(--x), var(--y)) scale(0); }
  50% { transform: translate(calc(var(--x) * -1), calc(var(--y) * -1)) scale(1); }
  100% { transform: translate(var(--x), var(--y)) scale(0); }
}



/* Global zoom hover for all product cards */
.product {
  @apply transition-transform duration-300 ease-in-out;
}

.product:hover {
  transform: scale(1.05);
}
